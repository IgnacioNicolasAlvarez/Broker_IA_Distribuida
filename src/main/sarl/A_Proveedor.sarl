/** 
 * 
 */

import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Schedules
import java.util.ArrayList
import java.util.List

/** 
 * @author ina
 * 
 */
agent A_Proveedor {
	uses DefaultContextInteractions, Schedules, Logging
	
	var listaProductos : ArrayList<Producto>
	var precioDeliver = 10.0

	
	on Initialize {
		info("Proveedor fue creado")
		precioDeliver = 15.0
		
		//
		//var x : List<Producto> = occurrence.parameters.get(0) as List<Producto>
	 	//
	 	
		var factorPrecio = Math.random()
		var precioBaseProducto = 10
		var cantProductos = 10
		
		listaProductos = new ArrayList<Producto>()
		cargarListaProductos(factorPrecio * precioBaseProducto, listaProductos, cantProductos)
	}
	
	on LlamadoAConcurso
	{
		println("Proveedor respondiendo al concurso")
		in(4000)[ComprobarExistencias(occurrence.codigoProducto)]
	}
	
	on SolicitudDeInstanciaProducto
	{
		in(2000)[devolverProducto(occurrence.codigoProducto)]
	}
	
	on ConfirmacionDePedido
	{
		in(2000)[concretarPedido(occurrence.codigoProducto)]
	}
	
	
	
	//comportamientos
	
	def concretarPedido(codProd_Aux : Integer)
	{
		var vf = false
		
		for (x : listaProductos) 
		{
			if (codProd_Aux == x.codigo && x.stock > 0) 
			{
				x.stock = x.stock - 1
				vf = true
			}
		}

		emit(new EnvioDeInstanciaDePedido(vf))
	}

	
	def ComprobarExistencias(codProd_Aux: Integer)
	{
		for(x : listaProductos)
		{
			if (codProd_Aux == x.codigo)
			{
				emit(new InformarExistencias(codProd_Aux, (x.stock > 0)))
			}
		}	
	}
	
	def cargarListaProductos(precioFactor : Double ,lista : ArrayList<Producto>, cantProd : Integer)
	{
		lista.add(new Producto(1, precioFactor, cantProd))
	}
	
	def devolverProducto(codProd_Aux : Integer) 
	{
		for (x : listaProductos) 
		{
			if (codProd_Aux == x.codigo) 
			{
				emit(new EnvioDeBial(new Bial(x.codigo, x.precio, precioDeliver)))
			}
		}
	}
}
